datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL2")
}

generator client {
  provider = "prisma-client-js"
}

// UserRole Model
model UserRole {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  role String @unique
  User User[]
}

// Cafe Model
model Cafe {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  location  String
  ownerId   String   @db.ObjectId
  owner     User     @relation(fields: [ownerId], references: [id], name: "CafeOwner")
  managerId String?  @db.ObjectId
  manager   User?    @relation(fields: [managerId], references: [id], name: "CafeManager")
  parentId  String?  @db.ObjectId
  parent    Cafe?    @relation("CafeBranches", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  branches  Cafe[]   @relation("CafeBranches")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// User Model
model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String?  @unique // Make email optional
  phone        String?  @unique(map: "phone_unique")
  password     String?
  roleId       String   @db.ObjectId
  role         UserRole @relation(fields: [roleId], references: [id])
  ownedCafes   Cafe[]   @relation("CafeOwner")
  managedCafes Cafe[]   @relation("CafeManager")
  points       Int? // Optional field for points
}
